{"version":3,"sources":["redux/actionTypes.js","App.jsx","redux/reducer.js","redux/root-reducer.js","redux/api.js","redux/sagas.js","redux/store.js","index.js"],"names":["FETCH_RECIPE_START","FETCH_RECIPE_SUCCESS","FETCH_RECIPE_FAIL","App","useState","search","setSearch","query","setQuery","dispatch","useDispatch","recipes","useSelector","state","data","useEffect","type","types","className","value","onChange","e","target","required","onClick","hits","map","item","recipe","label","src","image","alt","calories","cuisineType","initialState","error","loading","recipeReducer","action","payload","rootReducer","combineReducers","getRecipes","a","url","axios","get","onLoadRecipeAsync","onLoadRecipe","rootSaga","console","log","call","response","put","takeLatest","recipeSaga","fork","all","sagaMiddleWare","createSagaMiddleware","middleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAaA,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAoB,oB,eCoElBC,MAjEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEaF,mBAAS,WAFtB,mBAENG,EAFM,KAECC,EAFD,KAGPC,EAAWC,cACTC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAzCH,QAWR,OAVaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAM1CC,qBAAU,WACRN,EAAS,CAAEO,KAAMC,EAA0BV,YAC1C,CAACA,IAGF,sBAAKW,UAAU,QAAf,UACE,wBAAQA,UAAU,gBAAlB,SACE,8CAEF,qBAAKA,UAAU,gBAAf,SACA,sBAAKA,UAAU,0BAAf,UACE,uBACEC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAUe,EAAEC,OAAOH,QACpCH,KAAK,OACLO,UAAQ,IAEV,wBAAQP,KAAK,SAASQ,QArBP,WACnBhB,EAASH,GACTC,EAAU,KAmBN,yBAKF,qBAAKY,UAAU,cAAf,SACGP,GACCA,EAAQc,MACRd,EAAQc,KAAKC,KAAI,SAACC,GAChB,OACE,sBAAKT,UAAU,mBAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,4BAAIS,EAAKC,OAAOC,UAElB,qBAAKX,UAAU,uBAAf,SACE,qBAAKY,IAAKH,EAAKC,OAAOG,MAAOC,IAAKL,EAAKC,OAAOC,UAEhD,qBAAKX,UAAU,4BAAf,SACE,8BACE,gDACCS,EAAKC,OAAOK,cAGjB,qBAAKf,UAAU,4BAAf,SACE,8BACE,oDACCS,EAAKC,OAAOM,YAAY,oB,8BCzDvCC,EAAe,CACnBxB,QAAS,GACTyB,MAAO,KACPC,SAAS,GA2BIC,EAxBO,WAAmC,IAAlCzB,EAAiC,uDAAzBsB,EAAcI,EAAW,uCACtD,OAAQA,EAAOvB,MACb,KAAKC,EACH,OAAO,2BACFJ,GADL,IAEEwB,SAAS,IAEb,KAAKpB,EACH,OAAO,2BACFJ,GADL,IAEEwB,SAAS,EACT1B,QAAS4B,EAAOC,UAEpB,KAAKvB,EACH,OAAO,2BACFJ,GADL,IAEEwB,SAAS,EACTD,MAAOG,EAAOC,UAElB,QACI,OAAO3B,ICrBA4B,EAJKC,YAAgB,CAClC5B,KAAMwB,I,gDCCKK,EAAU,uCAAG,WAAOpC,GAAP,eAAAqC,EAAA,6DAChBC,EADgB,0CACyBtC,EADzB,mBAHZ,WAGY,oBAFX,oCAEW,SAETuC,IAAMC,IAAIF,GAFD,mFAAH,sD,WCDNG,G,WAUAC,G,WAMQC,GAhBlB,SAAUF,EAAV,4EAGc,OAHgBzC,EAA9B,EAA8BA,MAA9B,SAEH4C,QAAQC,IAAI,gBAFT,SAGoBC,YAAKV,EAAYpC,GAHrC,OAIH,OADM+C,EAHH,gBAIGC,YAAI,CAAEvC,KAAMC,EAA4BuB,QAASc,EAASxC,OAJ7D,+BAMH,OANG,oCAMGyC,YAAI,CAAEvC,KAAMC,EAAyBuB,QAAQ,EAAD,KAN/C,sDAUA,SAAUS,IAAV,iEACL,OADK,SACCO,YAAWvC,EAA0B+B,GADtC,uCAIP,IAAMS,EAAa,CAACC,YAAKT,IAEV,SAAUC,IAAV,iEACb,OADa,SACPS,YAAI,GAAD,OAAKF,IADD,uCCdf,IAAMG,EAAiBC,cACjBC,EAAa,CAACF,GAMpB,IAAMG,EAAQC,YAAYvB,EAAawB,IAAe,WAAf,EAAmBH,IAC1DF,EAAeM,IAAIhB,GACJa,Q,MCRfI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.6d671f93.chunk.js","sourcesContent":["export const FETCH_RECIPE_START = \"FETCH_RECIPE_START\";\r\nexport const FETCH_RECIPE_SUCCESS = \"FETCH_RECIPE_SUCCESS\";\r\nexport const FETCH_RECIPE_FAIL = \"FETCH_RECIPE_FAIL\";","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as types from \"./redux/actionTypes\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"chicken\");\r\n  const dispatch = useDispatch();\r\n  const { recipes } = useSelector((state) => state.data);\r\n  const data = useSelector((state) => state.data);\r\n\r\n  const updateSearch = () => {\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  };\r\n  useEffect(() => {\r\n    dispatch({ type: types.FETCH_RECIPE_START, query });\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"c-app\">\r\n      <header className=\"c-app__header\">\r\n        <h1>Recipe App</h1>\r\n      </header>\r\n      <div className=\"c-app__search\">\r\n      <div className=\"c-app__search-container\">\r\n        <input\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          type=\"text\"\r\n          required\r\n        />\r\n        <button type=\"submit\" onClick={updateSearch}>\r\n          Search\r\n        </button>\r\n      </div>\r\n      </div>\r\n      <div className=\"c-app__card\">\r\n        {recipes &&\r\n          recipes.hits &&\r\n          recipes.hits.map((item) => {\r\n            return (\r\n              <div className=\"c-app__card-item\">\r\n                <div className=\"c-app__card-item-title\">\r\n                  <p>{item.recipe.label}</p>\r\n                </div>\r\n                <div className=\"c-app__card-item-img\">\r\n                  <img src={item.recipe.image} alt={item.recipe.label} />\r\n                </div>\r\n                <div className=\"c-app__card-item-standart\">\r\n                  <p>\r\n                    <strong>Calories: </strong>\r\n                    {item.recipe.calories}\r\n                  </p>\r\n                </div>\r\n                <div className=\"c-app__card-item-standart\">\r\n                  <p>\r\n                    <strong>Localization: </strong>\r\n                    {item.recipe.cuisineType[0]}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as types from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  recipes: [],\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst recipeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_RECIPE_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case types.FETCH_RECIPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        recipes: action.payload,\r\n      };\r\n    case types.FETCH_RECIPE_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n        return state;\r\n  }\r\n};\r\n\r\nexport default recipeReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport recipeReducer from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  data: recipeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nconst apiID = \"8eb63c77\";\r\nconst apiKey = \"92d936e116f399d3fa96aaa44d13ac00\";\r\n\r\nexport const getRecipes = async (query) => {\r\n    const url = `https://api.edamam.com/search?q=${query}&app_id=${apiID}&app_key=${apiKey}`;\r\n    return await axios.get(url);\r\n} ","import { takeLatest, all, put, fork, call } from \"redux-saga/effects\";\r\nimport * as types from \"./actionTypes\";\r\nimport { getRecipes } from \"./api\";\r\n\r\nexport function* onLoadRecipeAsync({ query }) {\r\n  try {\r\n    console.log(\"query, query\")\r\n    const response = yield call(getRecipes, query);\r\n    yield put({ type: types.FETCH_RECIPE_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    yield put({ type: types.FETCH_RECIPE_FAIL, payload: error });\r\n  }\r\n}\r\n\r\nexport function* onLoadRecipe() {\r\n  yield takeLatest(types.FETCH_RECIPE_START, onLoadRecipeAsync);\r\n}\r\n\r\nconst recipeSaga = [fork(onLoadRecipe)];\r\n\r\nexport default function* rootSaga() {\r\n  yield all([...recipeSaga]);\r\n}\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst sagaMiddleWare = createSagaMiddleware();\r\nconst middleware = [sagaMiddleWare];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\nsagaMiddleWare.run(rootSaga);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}